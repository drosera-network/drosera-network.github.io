"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[671],{9613:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(9496);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},h="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),h=l(n),d=o,f=h["".concat(c,".").concat(d)]||h[d]||u[d]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[h]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7621:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(7605),o=(n(9496),n(9613));const a={sidebar_position:1},i="Introduction",s={unversionedId:"intro",id:"intro",title:"Introduction",description:"The Drosera Network is currently in active development. The documentation is subject to change as the state of the system evolves. More information will be added as the system matures. Testnet in Q2 2024.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Getting Started",permalink:"/docs/getting-started"}},c={},l=[{value:"What is the Drosera Network?",id:"what-is-the-drosera-network",level:2},{value:"Traps",id:"traps",level:2},{value:"Operators",id:"operators",level:2},{value:"High Level Architecture",id:"high-level-architecture",level:3}],p={toc:l},h="wrapper";function u(e){let{components:t,...a}=e;return(0,o.kt)(h,(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"introduction"},"Introduction"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The Drosera Network is currently in active development. The documentation is subject to change as the state of the system evolves. More information will be added as the system matures. Testnet in Q2 2024.")),(0,o.kt)("p",null,"Welcome to the ",(0,o.kt)("strong",{parentName:"p"},"Drosera Network")," documentation! This site contains documentation for:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://drosera.network"},"Traps")," - Smart contracts responsbile for gathering on-chain data and performing analysis over the collected data. Protocols can use Traps to monitor their on-chain state and signal the execution of an on-chain response function."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://drosera.network"},"Operators")," - Decentralized nodes that are responsible for executing Traps and performing on-chain response actions. Operators can opt into a Trap to gain permission to execute it and earn rewards.")),(0,o.kt)("h2",{id:"what-is-the-drosera-network"},"What is the Drosera Network?"),(0,o.kt)("p",null,"The team behind Drosera Network is a pastionate group of developers and researchers who are building trustless and decentralized infrastructure for detecting exploits and mitigating financial loss."),(0,o.kt)("p",null,"It is an automation protocol which abstracts the complexity of creating monitoring systems for decentralized applications. It provides a framework for creating and executing automated responses to events on the Ethereum network. This allows developers to create more robust and secure applications."),(0,o.kt)("p",null,"It was born out of the need for a more robust and decentralized security system for DeFi protocols. One that is more native to the Ethereum ecosystem with a strong foundation that can be built upon."),(0,o.kt)("p",null,"Simplicity and developer friendliness was paramount in the design of Drosera. We believe that the simplicity of Drosera will allow for a wide range of use cases for off chain monitoring and on chain responses."),(0,o.kt)("h2",{id:"traps"},"Traps"),(0,o.kt)("p",null,"Traps are a set of smart contracts that define the conditions for detecting invariants and performing on-chain responses. Traps have an on-chain and off-chain component that are described below:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Trap")," - An off-chain smart contract that performs data collection and analysis to signal the execution of an on-chain response function."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Trap Config")," - An on-chain smart contract that configures the trap and defines the on-chain response callback function.")),(0,o.kt)("p",null,"The Trap Config holds a hash of the Trap contract and the address of the on-chain response function. It is used to help coordinate the execution of the Trap and the on-chain response function with Operators as well as holding them accountable for doing so."),(0,o.kt)("h2",{id:"operators"},"Operators"),(0,o.kt)("p",null,"Operators are organizations and solo stakers running the Drosera Operator Client software to help maintain and protect the DeFi ecosystem. "),(0,o.kt)("p",null,"They are responsible for executing Traps and performing on-chain response actions. To execute a Trap, an Operation must gain permisison by opting into the Trap. Once opted in, the Operator will be able to gain access to the off-chain Trap and curent peers in the network. "),(0,o.kt)("p",null,"Opeators in the network are monitoring and evaluating every new block based on the conditions set by the Trap. If the conditions are met, the Operator will execute the on-chain response function."),(0,o.kt)("h3",{id:"high-level-architecture"},"High Level Architecture"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"DroseraHighLevelArchitecture",src:n(8208).Z,width:"710",height:"544"})))}u.isMDXComponent=!0},8208:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/DroseraHighLevelArchitecture-1e06fa112e96ffc401fbb063ee3c9388.png"}}]);